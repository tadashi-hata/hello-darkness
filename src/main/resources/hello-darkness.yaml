swagger: "2.0"
info:
  description: "Welcome to HelloDarkness. HelloDarkness is a streaming service for people who loves songs and wants to keep up to  date with music trends **around the world**"
  version: "1.0.0"
  title: "Swagger Hello Darkness Store"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "tadashi.hata.hata@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "hello.darkness.io"
basePath: "/v1"
tags:
- name: "song"
  description: "Everything about songs"
- name: "artist"
  description: "Operations about artists"
- name: "playlist"
  description: "Playlist operations"
schemes:
- "https"
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /songs:
    get:
      tags:
      - "song"
      summary: "Search songs by name"
      description: ""
      operationId: "findSongs"
      parameters:
      - in: "query"
        name: "song-name"
        type: "string"
        description: "This can be a partial song's name. In this case, all song's matching cases will be retrieved."
        required: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/GetSongsRes"
        204:
          description: "No content"
        400:
          description: "Bad request"
        500:
          $ref: '#/responses/ServerError'
  /songs/trends:  
    get:
      tags:
      - "song"
      summary: "Retrieve all trends songs"
      description: ""
      operationId: "findTrendSongs"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/GetSongsTrendsRes"
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/ServerError'
  /artists:
    get:
      tags:
      - "artist"
      summary: "Find artists by name"
      operationId: "findArtist"
      parameters:
      - name: "name"
        in: "query"
        description: "Artist Name"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetArtistRes"
        500:
          $ref: '#/responses/ServerError'
  /artists/{artist-id}:
    get:
      tags:
      - "artist"
      summary: "Find artist by ID"
      description: "Returns a single artist"
      operationId: "getArtistById"
      parameters:
      - name: "artist-id"
        in: "path"
        description: "Artist's id to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetArtistIdRes"
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'
  /playlists:
    get:
      tags:
      - "playlist"
      summary: "Find user's Playlists"
      operationId: "findPlaylist"
      responses:
        200:
          description: "successful operation"
          schema:  
              $ref: '#/definitions/GetPlaylistRes'
        204:
          description: "No content"
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/ServerError'
    post:
      tags:
      - "playlist"
      summary: "This method creates a new playlist."
      description: ""
      operationId: "Create a new Playlist"
      parameters:
      - in: "body"
        name: "body"
        description: "Playlist data. to create a playlist with a song, its just required the Song-Id."
        required: true
        schema:
          $ref: "#/definitions/Playlist"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PostPlaylistRes"
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/ServerError'
responses:
  BadRequest:
    description: "Bad request"
    schema:
      $ref: '#/definitions/ErrorRes'
  NotFound:
    description: "Resource Not Found"
  ServerError:
    description: "Server error, run to the Hills"
    schema:
      $ref: '#/definitions/ErrorRes'
definitions:
  Genre:
    type: "string"
    enum:
      - "pop"
      - "rock"
      - "heavy-metal"
      - "others"
  Song:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "integer"
        format: "int64"
      author:
        type: "string"
        maxLength: 60
      genre:
        type: "array"
        items:
          $ref: '#/definitions/Genre'
      released:
        type: "integer"
        format: "int32"
  Artist:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      genre:
        type: "array"
        items:
          $ref: "#/definitions/Genre"
      members:
        type: "array"
        items:
          $ref: '#/definitions/Member'
      albums:
        type: "object"
        items:
          $ref: '#/definitions/Album'
  Member:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      first-name:
        type: "string"
      last-name:
        type: "string"
      birth-date:
        type: "string"
        description: "Birth date, format is ISO-8601  (YYYY-MM-DD)"
        format: "date"
      website:
        type: "string"
  Album:
    type: "object"
    properties:
      artist:
        $ref: '#/definitions/Artist'
      songs:
        type: "array"
        items:
          $ref: '#/definitions/Song'
      released:
        type: "integer"
        description: "Album's released year."
        format: "int64"
  Playlist:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      songs:
        type: "array"
        items:
          $ref: '#/definitions/Song'
  Error:
    type: "object"
    properties:
      code:
        type: "string"
        description: "Error code, system code for tracking the issue."
      description:
        type: "string"
  ErrorRes:
    type: "array"
    items:
      $ref: '#/definitions/Error'
  GetSongsRes:
    type: "object"
    properties:
      data: 
        type: "array"
        items:
          $ref: '#/definitions/Song'
  GetSongsTrendsRes:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: '#/definitions/Song'
  GetArtistRes:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: '#/definitions/Artist'
  GetArtistIdRes:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/Artist'
  GetPlaylistRes:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: '#/definitions/Playlist'
  PostPlaylistRes:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/Playlist'